/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MaquinaVirtual;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStreamReader;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 12649190
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    
    // Variaveis
    private static final Interface janelaP = new Interface();
    private String urlArquivo;
    private Arquivo arquivo = null;
    DefaultTableModel tabPilha, tabInstrucao;
    Pilha pilha = new Pilha();
    int nume = 256, tamanhoArq =0;
    private int caracter = 0;
    private InputStreamReader leituracaracteres;
    private ProcessadorDeInstrucao processador;

    
    //Construtor da classe
    public Interface() 
    {
        this.urlArquivo = null;
        initComponents();
        tabPilha = (DefaultTableModel) tabelaPilha.getModel();
        tabInstrucao = (DefaultTableModel) tabelaInstrucao.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seletorDeArquivo = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaInstrucao = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaPilha = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textoSaida = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        botaoBreak = new javax.swing.JButton();
        botaoContinuar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        BarraDeMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        BotaoAbrirArqv = new javax.swing.JMenuItem();
        BotaoSalvarArqv = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        BotaoCompilar = new javax.swing.JMenuItem();

        seletorDeArquivo.setFileFilter(new FiltroDeArquivo());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelaInstrucao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Linha", "Instrução", "Atr 1", "Atr 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaInstrucao.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tabelaInstrucao);
        if (tabelaInstrucao.getColumnModel().getColumnCount() > 0) {
            tabelaInstrucao.getColumnModel().getColumn(0).setResizable(false);
            tabelaInstrucao.getColumnModel().getColumn(1).setResizable(false);
            tabelaInstrucao.getColumnModel().getColumn(2).setResizable(false);
            tabelaInstrucao.getColumnModel().getColumn(3).setResizable(false);
        }

        tabelaPilha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaPilha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Endereço", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPilha.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabelaPilha);
        if (tabelaPilha.getColumnModel().getColumnCount() > 0) {
            tabelaPilha.getColumnModel().getColumn(0).setResizable(false);
            tabelaPilha.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Pilha");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Instruções");

        textoSaida.setColumns(20);
        textoSaida.setRows(5);
        jScrollPane3.setViewportView(textoSaida);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Break Point's");

        botaoBreak.setText("Breakpoint");
        botaoBreak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBreakActionPerformed(evt);
            }
        });

        botaoContinuar.setText("Continuar");
        botaoContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoContinuarActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Saida");

        jMenu1.setText("Arquivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        BotaoAbrirArqv.setText("Abrir arquivo");
        BotaoAbrirArqv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAbrirArqvActionPerformed(evt);
            }
        });
        jMenu1.add(BotaoAbrirArqv);

        BotaoSalvarArqv.setText("Salvar arquivo");
        jMenu1.add(BotaoSalvarArqv);

        BarraDeMenu.add(jMenu1);

        jMenu2.setText("Executar");

        BotaoCompilar.setText("Compilar Código");
        BotaoCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCompilarActionPerformed(evt);
            }
        });
        jMenu2.add(BotaoCompilar);

        BarraDeMenu.add(jMenu2);

        setJMenuBar(BarraDeMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(267, 267, 267)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botaoBreak, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(botaoContinuar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(100, 100, 100)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(botaoBreak)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(botaoContinuar))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void BotaoAbrirArqvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAbrirArqvActionPerformed
        // Abrir seletor de Arquivo.
        seletorDeArquivo.setVisible(true);
        int returnVal = seletorDeArquivo.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) 
        {
            File file = seletorDeArquivo.getSelectedFile();
            try 
            {
                // What to do with the file, e.g. display it in a TextArea
                System.out.println(file.getAbsolutePath());
                this.urlArquivo = file.getAbsolutePath();
            } 
            catch (Exception ex) 
            {
                System.out.println("problem accessing file"+file.getAbsolutePath());
            }
            try 
            {
                inicializarTabelaArquivo();
            } 
            catch (FileNotFoundException ex) 
            {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        else 
        {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_BotaoAbrirArqvActionPerformed

    private void botaoBreakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBreakActionPerformed

    }//GEN-LAST:event_botaoBreakActionPerformed

    /**
     * 
     * @param evt 
     */
    private void BotaoCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCompilarActionPerformed
        if(urlArquivo != null)
        {
            int i = 0;
            while(processador.getInstrucoes().size() > i || !processador.isFim())
            {
                processador.runInstruction();
                pilha = processador.getPilha();
                zerarTabPilha();
                preencherTabPilha(pilha.tamPilha());
                exibirSaida();
                i++;
            }
        }
        else
           JOptionPane.showMessageDialog(null, "Abra um arquivo fonte antes de compilar", "Erro de Caminho", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_BotaoCompilarActionPerformed

    private void botaoContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoContinuarActionPerformed
        if(urlArquivo != null)
        {
            if(!processador.isFim())
            {
                processador.runInstruction();
                pilha = processador.getPilha();
                zerarTabPilha();
                preencherTabPilha(pilha.tamPilha());
                exibirSaida();
            }
            else
                JOptionPane.showMessageDialog(null, "Compilação chegou ao fim!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null, "Abra um arquivo fonte antes de compilar", "Erro de Caminho", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_botaoContinuarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                janelaP.setVisible(true);
                janelaP.setLocationRelativeTo(null);
                janelaP.setResizable(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar BarraDeMenu;
    private javax.swing.JMenuItem BotaoAbrirArqv;
    private javax.swing.JMenuItem BotaoCompilar;
    private javax.swing.JMenuItem BotaoSalvarArqv;
    private javax.swing.JButton botaoBreak;
    private javax.swing.JButton botaoContinuar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JFileChooser seletorDeArquivo;
    private javax.swing.JTable tabelaInstrucao;
    private javax.swing.JTable tabelaPilha;
    private javax.swing.JTextArea textoSaida;
    // End of variables declaration//GEN-END:variables

    
        //funcao para abrir arquivo
    private void inicializarTabelaArquivo() throws FileNotFoundException
    {
        //declarações
        FileInputStream abertura = new FileInputStream(urlArquivo); //abertura seria o objeto responsável pela abertura do arquivo
        this.leituracaracteres = new InputStreamReader(abertura);
        tabInstrucao = (DefaultTableModel) tabelaInstrucao.getModel();
        try 
        {
            int i = 0;
            processador = new ProcessadorDeInstrucao(urlArquivo);
            zerarTabInstrucao();
            zerarTabPilha();
            while(i < processador.getInstrucoes().size())
            {
                switch(nomeInstrucao.getInstructionType(processador.getInstrucoes().get(i).getInstrucao()))
                {
                    case 0:
                        InstrucaoSimples simples = (InstrucaoSimples) processador.getInstrucoes().get(i);
                        tabInstrucao.addRow(new String[]{String.valueOf(i+1), simples.getInstrucao().toString(), "", ""});
                        break;
                    case 1:
                        InstrucaoComposta composta = (InstrucaoComposta) processador.getInstrucoes().get(i);
                        tabInstrucao.addRow(new String[]{String.valueOf(i+1), composta.getInstrucao().toString(), Integer.toString(composta.getParam1()), ""});
                        break;
                    case 2:
                        InstrucaoDuplamenteComposta dupla = (InstrucaoDuplamenteComposta) processador.getInstrucoes().get(i);
                        tabInstrucao.addRow(new String[]{String.valueOf(i+1), dupla.getInstrucao().toString(), Integer.toString(dupla.getParam1()), Integer.toString(dupla.getParam2())});
                        break;
                }
                i++;
            }
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void zerarTabPilha()
    {
        System.out.println("Linhas: "+tabPilha.getRowCount());
        if(tabPilha.getRowCount() > 0)
        {
        int rows = tabPilha.getRowCount();
        for(int a=rows; a>0; a--)
        {
            tabPilha.removeRow(a-1);
        }
        }
    }
    
    public void preencherTabPilha(int tam)
    {
        if(tam > 0)
        {
            for(int a=tam; a > 1; a--)
            {
                System.out.println(pilha.getEnd(a-1)+pilha.getValor(a-1));
                tabPilha.addRow(new Integer[]{pilha.getEnd(a-1),pilha.getValor(a-1)});
            }
        }
    }
    
    public void zerarTabInstrucao()
    {
        if(tabInstrucao.getRowCount() > 0)
        {
            int rows = tabInstrucao.getRowCount();
            for(int a=rows; a>0; a--)
            {
                tabInstrucao.removeRow(a-1);
            }   
        }
    }
    
    public void exibirSaida()
    {
        if(processador.getSaida() != null)
        {
            textoSaida.append(processador.getSaida()+"\n");
            processador.setSaida();
        }
    }
    
    public void tabelaInstrucaoAdd()
    {
        tabInstrucao.addRow(new String[]{"1","Mov","atr1","atr2","teste"});
    }
    
    public int lerCaracter()
    {
        try
        {
            if(this.caracter != -1)
            {
                this.caracter = leituracaracteres.read(); //método read que retorna um inteiro que representa o caracter 
                return caracter;
            }
            else
            {
                tamanhoArq = 1;
                return caracter;
            }
        }
        catch (Exception ex)
        {
            System.out.println(ex.getMessage()); 
        }
        return 0;
    }
    


}

 class FiltroDeArquivo extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) 
        {
            return file.isDirectory() || file.getAbsolutePath().endsWith(".obj");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "MV File(*.obj)";
        }
    } 
